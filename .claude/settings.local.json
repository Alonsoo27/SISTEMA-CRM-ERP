{
  "permissions": {
    "allow": [
      "Bash(node:*)",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/soporte/tickets\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\")",
      "Bash(curl:*)",
      "Bash(npm install:*)",
      "Bash(find:*)",
      "Bash(echo:*)",
      "Bash(cat:*)",
      "Bash(npm run dev:*)",
      "Bash(psql:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "WebFetch(domain:github.com)",
      "Bash(npm uninstall:*)",
      "Bash(pkill:*)",
      "Bash(taskkill:*)",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/ventas/pipeline/dashboard?periodo=mes_actual\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(ConvertFrom-Json)",
      "Bash(ConvertTo-Json -Depth 10)",
      "Bash(rd:*)",
      "WebSearch",
      "Bash(redis-server:*)",
      "Bash(npm restart)",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/prospectos/dashboard-seguimientos/1\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/prospectos/analytics-completos?periodo=mes_actual\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(python:*)",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/ventas/dashboard-personal/1\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/prospectos/procesar-seguimientos-vencidos\" -Method POST -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/dashboard-ejecutivo/analisis-geografico?periodo=mes_actual\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(rg:*)",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/almacen/almacenes\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(npm run:*)",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/comisiones/bono-actual/1\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(npm start)",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/actividad/estado-hoy\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/actividad/datos-graficos?periodo=semanal\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/campanas/test\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/ventas/dashboard/periodos-disponibles/1\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(Invoke-WebRequest -Uri \"http://localhost:3001/api/dashboard/periodos-disponibles/1\" -Headers @{\"Authorization\"=\"Bearer fake-jwt-token-for-testing\"})",
      "Bash(Select-Object -ExpandProperty Content)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nPreparación completa para producción en Railway\n\n✨ Nuevas características:\n- Selector de períodos avanzado para dashboards ejecutivos y pipeline\n- Filtros temporales para análisis histórico (meses pasados)\n- Sistema completo listo para deployment\n\n🔧 Configuración Railway:\n- railway.json para backend y frontend\n- CORS dinámico configurado\n- Variables de entorno preparadas\n- Documentación completa de deployment\n\n📊 Mejoras en dashboards:\n- Vista Unificada con filtros temporales\n- Análisis Geográfico con períodos específicos\n- ABC Productos con datos históricos\n- Metas Avanzado con selector de períodos\n- Pipeline con análisis temporal\n\n🐛 Fixes:\n- Corrección de estructura de datos en PeriodSelector\n- Ajustes en controllers para períodos específicos\n- Optimización de queries temporales\n\n📝 Documentación:\n- RAILWAY_DEPLOYMENT.md con guía paso a paso\n- .env.example actualizados\n- Instrucciones de configuración\n\n🤖 Generated with Claude Code\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(git ls-tree:*)",
      "Bash(git checkout:*)",
      "Read(//c/**)",
      "Bash(findstr:*)"
    ],
    "deny": [],
    "ask": []
  }
}